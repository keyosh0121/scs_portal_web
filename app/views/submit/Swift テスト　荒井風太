問題1 クラスとインスタンス

import UIKit

class Person {
    var weight: Float
    var height: Float

    init(weight: Float,height: Float){
        self.weight = weight
        self.height = height
    }

    func calculateBMI(){
        print("BMIは\(self.weight/self.height/self.height)です")
    }
}


let person1 = Person(weight: 65.0, height: 169.4)

person1.calculateBMI()


問題2 メソッドと繰り返し処理

import UIKit

func calculateAve(nums: [Int]) -> Int{
    var sum = 0
    for num in nums {
        sum += num
    }

    return sum/nums.count
}


問題3 オプショナル
問題3-1 オプショナル型
nilを代入可能なOptional型を用意することで、変数にnilが代入されていて、内容がない、という状態のプログラムの記述を可能にするため。

問題3-2 オプショナルバインディング
import UIKit

var name: String? = "荒井風太"

if let unwrappedname = name {
    print("\(unwrappedname)")
} else {
    print("名無しさん")
}



問題3-3 辞書型からの取り出し
辞書型の変数の値は全てOptional型として代入され、今回それに対してアンラップを行なっていないから。

問題4 UIButton
問題4-1 ボタンの生成
問題4-2 sender
クリックされたUIButtonクラスのインスタンスを引数としてbuttonClickedメソッドで使用するための変数。

問題5 UITableView
この問題はこのフォーマットに回答を記述せず、
試験終了後に作成したプロジェクトを試験官に送信してください。

問題6 AutoLayout
この問題はこのフォーマットに回答を記述せず、
試験終了後に作成したプロジェクトを試験官に送信してください。

問題7 知識問題
問題7-1
viewWillAppearは指定されたUIviewクラスのインスタンスが表示されるたびに、viewDidLoadは指定されたUIViewクラスのインスタンスが生成された時に実行される。

問題7-2
クラス間で処理を行うための仲介役を担うもので、使用することによって異なるクラスからリクエストされたまとまった処理を指定したクラスで行うことができる。

問題7-3
インスタンスが一つしか生成できないクラスのことを指す。プログラムの処理が全てあるクラスの一つのインスタンスによって行われる場合にそのクラスをシングルトンとする。

問題7-4
変数のまとまり。関数の引数の指定を明確にしたい場合に、enumを使う。その関数を使用する際、enum内で定義した変数の形式以外引数として渡せなくなる。

問題7-5
関数の引数として関数が指定されている場合、引数である関数をコールバック関数と言い、またその処理をコールバックという。
関数がの処理中に別の関数の処理を走らせたい場合など、複雑なプログラムを書く際に使う。

問題8 デリゲート
